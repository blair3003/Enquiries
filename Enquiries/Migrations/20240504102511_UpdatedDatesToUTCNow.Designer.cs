// <auto-generated />
using System;
using Enquiries;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Enquiries.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240504102511_UpdatedDatesToUTCNow")]
    partial class UpdatedDatesToUTCNow
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("Enquiries.Models.Enquiry", b =>
                {
                    b.Property<int>("EnquiryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MediaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ReporterId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Subject")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("EnquiryId");

                    b.HasIndex("MediaId");

                    b.HasIndex("ReporterId");

                    b.ToTable("Enquiries");
                });

            modelBuilder.Entity("Enquiries.Models.Media", b =>
                {
                    b.Property<int>("MediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("MediaId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Media");
                });

            modelBuilder.Entity("Enquiries.Models.Reporter", b =>
                {
                    b.Property<int>("ReporterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MediaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mobile")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tel")
                        .HasColumnType("TEXT");

                    b.HasKey("ReporterId");

                    b.HasIndex("MediaId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Reporters");
                });

            modelBuilder.Entity("Enquiries.Models.Enquiry", b =>
                {
                    b.HasOne("Enquiries.Models.Media", "Media")
                        .WithMany("Enquiries")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Enquiries.Models.Reporter", "Reporter")
                        .WithMany("Enquiries")
                        .HasForeignKey("ReporterId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Media");

                    b.Navigation("Reporter");
                });

            modelBuilder.Entity("Enquiries.Models.Reporter", b =>
                {
                    b.HasOne("Enquiries.Models.Media", "Media")
                        .WithMany("Reporters")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Media");
                });

            modelBuilder.Entity("Enquiries.Models.Media", b =>
                {
                    b.Navigation("Enquiries");

                    b.Navigation("Reporters");
                });

            modelBuilder.Entity("Enquiries.Models.Reporter", b =>
                {
                    b.Navigation("Enquiries");
                });
#pragma warning restore 612, 618
        }
    }
}
